script(src='https://code.jquery.com/jquery-3.5.1.slim.min.js' integrity='sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' crossorigin='anonymous')
    script.
      window.jQuery || document.write('<script src="/docs/4.5/assets/js/vendor/jquery.slim.min.js"><\\/script>')
    script(src='https://getbootstrap.com/docs/4.5/dist/js/bootstrap.bundle.min.js' integrity='sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx' crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.9.0/feather.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js')
    script(src='https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js')
    script(src='/socket.io/socket.io.js')
    script(src='/js/dashboard.js')
    

    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js')
    script(src='js/jquery.magnific-popup.js')
    script(src='/js/custom.js')

    script.
      var re = new RegExp(/^.*\//);
      if(window.location.href == re.exec(window.location.href)){
        var socket = io();
        var ctx = document.getElementById('myChart').getContext('2d');
        var salesRepObject = loadSalesRep(ctx, !{JSON.stringify(stats)});

        var ctx2 = document.getElementById('myPieChart1').getContext('2d');
        var urgentCountObject = getUrgentCount(ctx2, !{JSON.stringify(urgenCount)});

        
        var ctx3 = document.getElementById('myPieChart2').getContext('2d');
        var clientCountObject = getClients(ctx3, !{JSON.stringify(clientCount)});

        

        socket.on('db', (msg) => {
          //Load the initital data
          var curr = JSON.parse(msg);
          if(curr.operationType == 'insert'){
            var myTable = document.getElementById('newItem');
            var row = myTable.insertRow(0);
            //console.log(curr.fullDocument);
            var c0 = row.insertCell(0);
            var c1 = row.insertCell(1);
            var c2 = row.insertCell(2);
            var c3 = row.insertCell(3);
            var c4 = row.insertCell(4);
            var c5 = row.insertCell(5);
            var c6 = row.insertCell(6);
            var c7 = row.insertCell(7);
            var c8 = row.insertCell(8);
            
            c0.innerHTML = '<a href="motor/motorItem/'+ curr.fullDocument.tagID +'">'+curr.fullDocument.tagID+'</a>';
            c1.innerHTML = 0;
            c2.innerHTML = curr.fullDocument.status
            c3.innerHTML = curr.fullDocument.company;
            c4.innerHTML = curr.fullDocument.motorType;
            c5.innerHTML = curr.fullDocument.power;
            if(curr.fullDocument.pmID == '')
              c6.innerHTML = 'None'
            else 
              c6.innerHTML = curr.fullDocument.pmID
            c7.innerHTML = curr.fullDocument.submotors.length;
            c8.innerHTML = curr.fullDocument.remarks;

            if(myTable.rows.length > 10)
              myTable.deleteRow(10);

            console.log($('.recentItems tr:first-child'));
            $('.recentItems tr:first-child').find('td:first-child').addClass('tagid');
            
            //Make changes to Urgent Chart
              var urgentIndx = '';
              curr.fullDocument.urgent === 'on'? 
                urgentIndx = urgentCountObject.data.labels.indexOf('urgent'):
                urgentIndx = urgentCountObject.data.labels.indexOf('not');
              urgentCountObject.chart.data.datasets[0].data[urgentIndx]++;
              urgentCountObject.update();

              //Make changes to Client Chart
              var clientIndx = clientCountObject.data.labels.indexOf(curr.fullDocument.company);
              if(clientIndx >= 0)
              {
                clientCountObject.chart.data.datasets[0].data[clientIndx]++;
                clientCountObject.update();
              }
              else{
                clientCountObject.data.labels.push(curr.fullDocument.company);
                clientCountObject.data.datasets.forEach((dataset) => {
                    dataset.data.push(1);
                });
                clientCountObject.update();
              }
            //Make changes to SalesRep Chart
            console.log(curr.fullDocument);
            var salesRepIndx = salesRepObject.data.labels.indexOf(curr.fullDocument.salesRep);
            if(salesRepIndx >= 0)
            {
              salesRepObject.chart.data.datasets[0].data[salesRepIndx]++;
              salesRepObject.update();
            }
            else{
              salesRepObject.data.labels.push(curr.fullDocument.salesRep);
              salesRepObject.data.datasets.forEach((dataset) => {
                  dataset.data.push(1);
              });
              salesRepObject.update();
            }
          }
          if(curr.operationType == 'replace'){
            //- console.log(curr);
            $('.tagid a:contains('+curr.fullDocument.tagID+')').css('background', 'black');
          }

          
          //console.log(curr.fullDocument.status);
          switch(curr.fullDocument.status)  
          {
            case 'notstarted': 
              document.getElementById('notStarted').innerHTML = parseInt(document.getElementById('notStarted').innerHTML) + 1;
              break;
            case 'oncheckup': 
              document.getElementById('onCheckup').innerHTML = parseInt(document.getElementById('onCheckup').innerHTML) + 1;
              break;
            //- case 'For Quotation': 
            //-   document.getElementById('forQuotation').innerHTML = parseInt(document.getElementById('forQuotation').innerHTML) + 1;
            //-   break;
            //- case 'Awaiting Purchase Order': 
            //-   document.getElementById('awaitingPo').innerHTML = parseInt(document.getElementById('awaitingPo').innerHTML) + 1;
            //-   break;
            //- case 'On Rewind': 
            //-   document.getElementById('onRewind').innerHTML = parseInt(document.getElementById('onRewind').innerHTML) + 1;
            //-   break;
            //- case 'On Fabrication': 
            //-   document.getElementById('onFabrication').innerHTML = parseInt(document.getElementById('onFabrication').innerHTML) + 1;
            //-   break;
            //- case 'In Baking': 
            //-   document.getElementById('inBaking').innerHTML = parseInt(document.getElementById('inBaking').innerHTML) + 1;
            //-   break;
            //- case 'Waiting for Materials': 
            //-   document.getElementById('waitingMaterials').innerHTML = parseInt(document.getElementById('waitingMaterials').innerHTML) + 1;
            //-   break;
            //- case 'Assembly and Testing': 
            //-   document.getElementById('assAndTest').innerHTML = parseInt(document.getElementById('assAndTest').innerHTML) + 1;
            //-   break;
            //- case 'Painting': 
            //-   document.getElementById('painting').innerHTML = parseInt(document.getElementById('painting').innerHTML) + 1;
            //-   break;
            //- case 'For Delivery': 
            //-   document.getElementById('forDelivery').innerHTML = parseInt(document.getElementById('forDelivery').innerHTML) + 1;
            //-   break;
            //- case 'For Billing Statement': 
            //-   document.getElementById('forBilling').innerHTML = parseInt(document.getElementById('forBilling').innerHTML) + 1;
            //-   break;
            //- case 'For OR': 
            //-   document.getElementById('forOr').innerHTML = parseInt(document.getElementById('forOr').innerHTML) + 1;
            //-   break;
            //- case 'Completed': 
            //-   document.getElementById('completed').innerHTML = parseInt(document.getElementById('completed').innerHTML) + 1;
            //-   break;
          }

        });
      }
      
    
    script.
      $(window).resize(function() {
        
        var totalWidth=document.body.clientWidth;

        if(totalWidth <= 600)
        {
            clientCountObject.options.legend.display = false;
            clientCountObject.update();
        }
        else{
          clientCountObject.options.legend.display = true;
          clientCountObject.update();
        }
      });

      function submitForm(e)
      {
          e.preventDefault();
          alert('Success!');
      }

      function addContent(status, index){
        switch(status._id)  
        {
          case 'notstarted': 
            document.getElementById('notStarted').innerHTML = status.count;
            break;
          case 'oncheckup': 
            document.getElementById('onCheckup').innerHTML = status.count;
            break;
          //- case 'For Quotation': 
          //-   document.getElementById('forQuotation').innerHTML = status.count;
          //-   break;
          //- case 'Awaiting Purchase Order': 
          //-   document.getElementById('awaitingPo').innerHTML = status.count;
          //-   break;
          //- case 'On Rewind': 
          //-   document.getElementById('onRewind').innerHTML = status.count;
          //-   break;
          //- case 'On Fabrication': 
          //-   document.getElementById('onFabrication').innerHTML = status.count;
          //-   break;
          //- case 'In Baking': 
          //-   document.getElementById('inBaking').innerHTML = status.count;
          //-   break;
          //- case 'Waiting for Materials': 
          //-   document.getElementById('waitingMaterials').innerHTML = status.count;
          //-   break;
          //- case 'Assembly and Testing': 
          //-   document.getElementById('assAndTest').innerHTML = status.count;
          //-   break;
          //- case 'Painting': 
          //-   document.getElementById('painting').innerHTML = status.count;
          //-   break;
          //- case 'For Delivery': 
          //-   document.getElementById('forDelivery').innerHTML = status.count;
          //-   break;
          //- case 'For Billing Statement': 
          //-   document.getElementById('forBilling').innerHTML = status.count;
          //-   break;
          //- case 'For OR': 
          //-   document.getElementById('forOr').innerHTML = status.count;
          //-   break;
          //- case 'Completed': 
          //-   document.getElementById('completed').innerHTML = status.count;
          //-   break;
        }
      }
      
      function openNav() {
        document.getElementById("mySidebar").style.width = "250px";
        document.getElementById("maincontent").style.marginLeft = "250px";
      }

      function closeNav() {
        document.getElementById("mySidebar").style.width = "0";
        document.getElementById("maincontent").style.marginLeft= "0";
      }
      !{JSON.stringify(statusStats)}.forEach(addContent);