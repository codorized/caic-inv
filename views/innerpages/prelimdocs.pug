html(lang='en')
  include ../components/stage_header.pug
  body.bg-light
    .container.prelimdocs
      include ../components/stage_navbar.pug
      form(method='post', enctype="multipart/form-data")
        include ../components/buttons.pug
        .row.motorinfo
          .col-md-4.order-md-2.mb-4#closepane.show
            h4.d-flex.justify-content-between.align-items-center.mb-3
              span.text-muted Motor Group Pane
            ul.list-group.mb-3.motorpane
                li.list-group-item.d-flex.justify-content-between.lh-condensed(data-toggle='collapse' data-target='#collapseOne' aria-expanded='false' aria-controls='collapseOne')
                  div
                    h6.my-0 #{motordetails.notstarted[0].motorType} - #{motorObjOncheckup.power}
                    small.text-muted Motor/TAG ID: #{motordetails.notstarted[0].tagID}
          .col-md-8.order-md-1.motorcol
            h4.mb-3 Motor Details
            form
              #accordionExample.accordion
                .card
                  #headingOne.card-header.mainmotor
                    h2.mb-0
                      button.btn.btn-link(type='button' data-toggle='collapse' data-target='#collapseOne' aria-expanded='true' aria-controls='collapseOne')
                        | Main Motor
                    .closepane
                      input.btn.btn-primary(type='button' name='closepane' value='Close Pane' data-toggle="collapse" data-target="#closepane" aria-expanded="true" aria-controls="closepane")
                  #collapseOne.collapse.show(aria-labelledby='headingOne' data-parent='#accordionExample')
                    .card-body
                      .row
                        .col-md-6.mb-3  
                          label(for='voltage') Name of Rewinder
                          select.form-control.rewinders(name='rewindername' placeholder='' required='')
                      .row
                        .col-md-6.mb-3.discountfield 
                          label(for='voltage') Discount
                          .row  
                            .col-md-6.mb-3 
                              input.form-control.discountpass(type='password' name='discountpass' placeholder='passcode first' autocomplete="off")
                            .col-md-6.mb-3 
                              label(for='voltage')  
                              input.form-control.discountpassenter.btn.btn-warning(type='button' value='Verify' name="discountverify")
                      .row
                        .col-md-6.mb-3  
                          label(for='voltage') Start Date
                          input.form-control(type='date' name='startdate' placeholder='' required='')
                        .col-md-6.mb-3  
                          label(for='voltage') Finish Date
                          input.form-control(type='date' name='finishdate' placeholder='' required='')
                      .row
                        .col-md-6.mb-3#qformcont
                          label(for='download') Quotation Form
                          input.form-control.btn-primary.qformprompt(type='button' name='qform' required='' value='Generate Quotation Form?') 
                          input.form-control.btn-warning#qform.submit(type='button' name='beforeimage' required='' value='Generate') 
                      .card
                        #headingOne.card-header
                          h5.mb-0
                            button.btn.btn-link(type='button' data-toggle='collapse' data-target='#genreq' aria-expanded='false' aria-controls='genreq')
                              | General Requirements
                        #genreq.collapse(aria-labelledby='headingOne' data-parent='#genreq')
                          .card-body
                         
                            table.table
                             thead
                                tr
                                    th(scope='col') Name
                                    th(scope='col') Qty
                                    th(scope='col') Unit Cost
                                    th(scope='col') Total Cost
                                tbody
                                  tr 
                                    th Pickup and Delivery
                                    td 
                                        input.form-control.qty(type='text' name='genreq-pickup-qty' placeholder='' required='' value='1')
                                    td 
                                        input.form-control.unitcost(type='text' name='genreq-pickup-unitcost' placeholder='' required='' value='0')
                                    td 
                                        input.form-control.totalcost(type='text' name='genreq-pickup-totalcost' placeholder='' required='' value='0' readonly)
                                  tr 
                                    th Dismantling and Installation
                                    td 
                                        input.form-control.qty(type='text' name='genreq-dismantling-qty' placeholder='' required='' value='1')
                                    td 
                                        input.form-control.unitcost(type='text' name='genreq-dismantling-unitcost' placeholder='' required='' value='0')
                                    td 
                                        input.form-control.totalcost(type='text' name='genreq-dismantling-totalcost' placeholder='' required='' value='0' readonly)
                      .card
                        #headingOne.card-header
                          h5.mb-0
                            button.btn.btn-link(type='button' data-toggle='collapse' data-target='#statorassembly' aria-expanded='false' aria-controls='statorassembly')
                              | Stator Assembly
                        #statorassembly.collapse(aria-labelledby='headingOne' data-parent='#statorassembly')
                          .card-body
                            .row
                              .col-md-6.mb-3#qformcont
                                label(for='download') Quotation Form for Stator
                                input.form-control.btn-warning.subqform-stator(type='button' required='' value='Generate') 
                            table.table
                             thead
                                tr
                                    th(scope='col') Name
                                    th(scope='col') Qty
                                    th(scope='col') Unit Cost
                                    th(scope='col') Total Cost
                                tbody
                                - counter = 1
                                each scope in motorObjOncheckup.stator
                                    tr 
                                        th 
                                          b #{scope.formal}
                                        td 
                                            input.form-control.qty(type='text' name='stator-qty-'+counter placeholder='' required='' value='1')
                                        td 
                                            input.form-control.unitcost(type='text' name='stator-unitcost-'+counter placeholder='' required='' value='0' readonly)
                                        td 
                                            input.form-control.totalcost(type='text' name='stator-totalcost-'+counter placeholder='' required='' value='0' readonly)
                                        - counter++;
                      .card
                        #headingOne.card-header
                          h5.mb-0
                            button.btn.btn-link(type='button' data-toggle='collapse' data-target='#rotorassembly' aria-expanded='false' aria-controls='rotorassembly')
                              | Accessories
                        #rotorassembly.collapse(aria-labelledby='headingOne' data-parent='#rotorassembly')
                          .card-body
                            .row
                              .col-md-6.mb-3
                                label(for='download') Quotation Form for Accessories
                                input.form-control.btn-warning.subqform-accessories(type='button' required='' value='Generate') 
                            table.table
                             thead
                                tr
                                    th(scope='col') Check
                                    th(scope='col') Name
                                    th(scope='col') Item
                                    th(scope='col') Qty
                                    th(scope='col') Unit Cost
                                    th(scope='col') Total Cost
                                    th(scope='col') Remarks
                                tbody
                                - counter = 1
                                each scope in motorObjOncheckup.accessories
                                    tr
                                      td.filterqform 
                                        input#defaultCheck1.form-check-input(type='checkbox' value='')
                                      td 
                                        b #{scope.formal}
                                      if(scope.name == 'acce-options-capilla-or-gear' && scope['acce-options-capilla-or-gear2'] == 'Capilla Oil')
                                        td.loading 
                                          select.form-control.model-oil-capilla(name = 'acce-item-'+counter)
                                      else if(scope.name == 'acce-options-capilla-or-gear' && scope['acce-options-capilla-or-gear2'] == 'Gear Oil')
                                        td.loading 
                                          select.form-control.model-oil-gear(name = 'acce-item-'+counter)
                                      else if(scope.name == 'acce-options-fanblade')
                                        td.loading 
                                          select.form-control.model-fanblade(name = 'acce-item-'+counter)
                                      else if(scope.name == 'acce-options-capacitor')
                                        td.loading 
                                          select.form-control.model-capacitor(name = 'acce-item-'+counter)
                                      else if(scope.name == 'acce-options-oilseal')
                                        td.loading 
                                          select.form-control.model-oilseal(name = 'acce-item-'+counter)
                                      else if(scope.name == 'acce-options-shaftseal')
                                        td.loading 
                                          select.form-control.model-shaftseal(name = 'acce-item-'+counter)
                                      else if(scope.name == 'acce-options-oring-or-packing')
                                        td.loading 
                                          select.form-control.model-oringorpacking(name = 'acce-item-'+counter)
                                      else if(scope.name == 'rotor-loadside' || scope.name == 'rotor-fanslide' || scope.name == 'rotor-gearbox1' || scope.name == 'rotor-gearbox2' || scope.name == 'rotor-gearbox3' || scope.name == 'rotor-gearbox4' || scope.name == 'rotor-gearbox5' || scope.name == 'rotor-gearbox6')
                                        td.acce-parent
                                          select.form-control.acce(name = 'acce-item-'+counter )
                                      else if scope.name == 'acce-other-1'
                                        td.acce-parent
                                          select.form-control.price(name = 'item-models')
                                          select.form-control(name = 'item-model-items' required)
                                      else 
                                        td.acce-parent
                                          input.form-control.acce(name = 'acce-item-'+counter )
                                      td
                                          input.form-control.qty(type='text' name='acce-qty-'+counter placeholder='' required='' value='1')
                                      if scope.name != 'rotor-shafting'
                                        td
                                          input.form-control.unitcost(type='text' name='acce-unitcost-'+counter placeholder='' required='' value='0' readonly)
                                      else 
                                        td
                                          input.form-control.unitcost(type='text' name='acce-unitcost-'+counter placeholder='' required='' value='0')
                                      td
                                          input.form-control.totalcost(type='text' name='acce-totalcost-'+counter placeholder='' required='' value='0' readonly)
                                      td
                                          input.form-control(type='text' name='acce-remarks-'+counter placeholder='' value='' disabled)
                                      - counter++;
                      .card
                        #headingOne.card-header
                          h5.mb-0
                            button.btn.btn-link(type='button' data-toggle='collapse' data-target='#accessories' aria-expanded='false' aria-controls='accessories')
                              | Mechanical
                        #accessories.collapse(aria-labelledby='headingOne' data-parent='#accessories')
                          .card-body
                            .row
                                .col-md-6.mb-3
                                  label(for='download') Quotation Form for Mechanical
                                  input.form-control.btn-warning.subqform-mechanical(type='button' required='' value='Generate') 
                            table.table
                             thead
                                tr
                                    th(scope='col') Check
                                    th(scope='col') Name
                                    th(scope='col') Item
                                    th(scope='col') Qty
                                    th(scope='col') Unit Cost
                                    th(scope='col') Total Cost
                                    th(scope='col') Remarks
                                tbody
                                - counter = 1
                                each scope in motorObjOncheckup.mechanical
                                    tr(class = scope.name) 
                                        td.filterqform 
                                          input#defaultCheck1.form-check-input(type='checkbox' value='')
                                        td 
                                          b #{scope.formal}
                                        if(scope.name != 'acce-fancover' && scope.name != 'acce-terminal' && scope.name != 'acce-wielding' && scope.name != 'acce-terminalpost' && scope.name != 'acce-cable' && scope.name != 'acce-alignment' && scope.name != 'acce-finge-coupling' && scope.name != 'acce-welding-motor' && scope.name != 'acce-shafting')
                                          td.acce-parent
                                              select.form-control(name = 'mech-item-'+counter )
                                                option Loan Side
                                                option Fan Side
                                                option Both Sides
                                        else if(scope.name == 'acce-options-fanblade')
                                          td 
                                            select.form-control.model-fanblade(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-fancover')
                                          td.loading 
                                            select.form-control.model-fancover(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-terminal')
                                          td.loading 
                                            select.form-control.model-terminalcover(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-wielding')
                                          td.loading 
                                            select.form-control.model-endplate(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-terminalpost')
                                          td.loading 
                                            select.form-control.model-terminalpost(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-cable')
                                          td.loading 
                                            select.form-control.model-adaptorcable(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-alignment')
                                          td.loading 
                                            select.form-control.model-shafting-fabrication(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-finge-coupling')
                                          td.loading 
                                            select.form-control.model-flangecoupling(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-shafting')
                                          td.loading 
                                            select.form-control.model-shafting-buildupandmachining(name = 'mech-item-'+counter)
                                        else if(scope.name == 'acce-welding-motor')
                                          td.loading 
                                            select.form-control.model-motorbase(name = 'mech-item-'+counter)
                                        else 
                                          td
                                            input.form-control(type='text' name='mech-item-'+counter placeholder='' required='' )
                                        td 
                                            input.form-control.qty(type='text' name='mech-qty-'+counter placeholder='' required='' value='1')
                                        td 
                                            input.form-control.unitcost(type='text' name='mech-unitcost-'+counter placeholder='' required='' value='0' readonly)
                                        td 
                                            input.form-control.totalcost(type='text' name='mech-totalcost-'+counter placeholder='' required='' disabled value='0' readonly)
                                        td
                                            input.form-control(type='text' name='mech-remarks-'+counter placeholder='' value='' disabled)
                                        - counter++
                      .card
                        #headingOne.card-header
                          h5.mb-0
                            button.btn.btn-link(type='button' data-toggle='collapse' data-target='#dynamicbalance' aria-expanded='false' aria-controls='dynamicbalance')
                              | Dynamic Balancing of
                        #dynamicbalance.collapse(aria-labelledby='headingOne' data-parent='#dynamicbalance')
                          .card-body
                            .row
                                .col-md-6.mb-3
                                  label(for='download') Quotation Form for Dynamic
                                  input.form-control.btn-warning.subqform-dynamic(type='button' required='' value='Generate') 
                            table.table
                             thead
                                tr
                                    th(scope='col') Check
                                    th(scope='col') Name
                                    th(scope='col') Qty
                                    th(scope='col') Unit Cost
                                    th(scope='col') Total Cost
                                tbody
                                - counter = 1
                                each scope in motorObjOncheckup.dynamic
                                    tr(class = scope.name) 
                                        td.filterqform 
                                          input#defaultCheck1.form-check-input(type='checkbox' value='')
                                        th 
                                          b #{scope.formal}
                                        td 
                                            input.form-control.qty(type='text' name='dynamic-qty-'+counter placeholder='' required='' value='1')
                                        td 
                                            input.form-control.unitcost(type='text' name='dynamic-unitcost-'+counter placeholder='' required='' disabled value='0' readonly)
                                        td 
                                            input.form-control.totalcost(type='text' name='dynamic-totalcost-'+counter placeholder='' required='' disabled value='0' readonly)
                                        - counter++
                      .card
                        #headingOne.card-header
                          h5.mb-0
                            button.btn.btn-link(type='button' data-toggle='collapse' data-target='#misc' aria-expanded='false' aria-controls='misc')
                              | Miscelleneous
                        #misc.collapse(aria-labelledby='headingOne' data-parent='#misc')
                          .card-body
                            .row
                                .col-md-6.mb-3
                                  label(for='download') Quotation Form for Miscelleneous
                                  input.form-control.btn-warning.subqform-misc(type='button' required='' value='Generate') 
                            table.table
                             thead
                                tr
                                    th(scope='col') Name
                                    th(scope='col') Qty
                                    th(scope='col') Unit Cost
                                    th(scope='col') Total Cost
                                tbody
                                - counter = 1
                                each scope in motorObjOncheckup.misc
                                    tr 
                                        th 
                                          b #{scope.name}
                                        td 
                                            input.form-control.qty(type='text' name='misc-qty-'+counter placeholder='' required='' value='1')
                                        td 
                                            input.form-control.unitcost(type='text' name='misc-unitcost-'+counter placeholder='' required='' value='0')
                                        td 
                                            input.form-control.totalcost(type='text' name='misc-totalcost-'+counter placeholder='' required='' disabled value='0')
                                        - counter++;    		
                  
    include ../components/stage_footer.pug
    script(src='../js/stages/prelimdocs.js')
    script(src='../js/common.js')
    script. 

        $( document ).ready(function() { 
            

            //DRAFT
            const draft = !{JSON.stringify(draft)};
            const tagID = !{JSON.stringify(tagID)};
            const role = !{JSON.stringify(role)};
            

            //INIT
            var motorobject = !{JSON.stringify(motorObjOncheckup)}
            var motorrpm = motorobject.rpm
            var motorpower = motorobject.power
            var motorpowerval = motorpower.split(' ')[0]
            var motorpowertype = motorpower.split(' ')[1]
            var tableurl = null
            var baseurl = window.location.protocol + "//" + window.location.host + "/"
            var hzspeed = Math.floor((120*motorobject.frequency)/motorrpm);
           
            
            if(hzspeed >= 8) hzspeed = 5
            else if(hzspeed >= 6 && hzspeed < 8) hzspeed = 4
            else if(hzspeed < 4) hzspeed = 3
            else hzspeed = 2

            

            if(motorpowertype == 'HP') tableurl = baseurl+'motor/hpTable/'+motorpowerval;
            else if (motorpowertype == 'KW') tableurl = baseurl+'motor/kwTable/'+motorpowerval;
            
            if(tableurl)
            {
              var hptable = function () {
                  var tmp = null;
                  $.ajax({   
                      async: false, 
                      method: 'GET',
                      url: tableurl,                        
                      success: function (data) {                        
                          tmp = data;
                          
                      },
                      error: function (xhr, text, error) {              
                          alert('Prelimdocs ajx: motor/kwTable/'+motorpowerval + 'Error: ' + error);
                      }
                  })
                  return tmp;
              }();
            }
            
            //Populate select tag of other field
            -$.ajax({   
                async: false, 
                method: 'GET',
                url: baseurl+'motor/models',                      
                success: function (data) {                        
                    for(var i=0; i<data.length; i++)
                    {
                      if(data[i].name == 'pricelist_bearing')
                        -$('select[name=item-models]').append('<option selected>'+(data[i].name).replace('pricelist_', '')+'</option>')
                      else 
                        -$('select[name=item-models]').append('<option>'+(data[i].name).replace('pricelist_', '')+'</option>')
                    }
                },
                error: function (xhr, text, error) {              
                    alert(error)
                }
            })


            -$('select[name=item-models]').on('change', function(){
                getItemandPrice($(this).val(), true)
            })
            -$('select[name=item-model-items]').on('change', function(){
                getItemandPrice($('select[name=item-models]').val(), false)
            })

            function getItemandPrice(motherModel, isMother)
            {
              
              -$.ajax({   
                    async: true, 
                    method: 'GET',
                    url: baseurl+'motor/priceList/model/'+motherModel,                        
                    success: function (data) {  
                        if(isMother)
                        {
                          $('select[name=item-model-items]').find('option').remove()
                        
                          for(var i=0; i<data.length; i++)
                          {
                            -$('select[name=item-model-items]').append('<option>' + data[i].model + '</option>');
                          }   
                        }
                                 
                        var model = $('select[name=item-models]').val()
                        var item = $('select[name=item-model-items]').val()
                        
                        $.ajax({   
                          async: true, 
                          method: 'GET',
                          url: baseurl+'motor/priceList/model/'+model+'/'+item,                        
                          success: function (data2) { 
                              //- console.log(data2)
                              $('select[name=item-models]').parent().parent().find('.unitcost').val(data2[0].price);
                              var qty = parseInt($('select[name=item-models]').parent().parent().find('.qty').val());
                              $('select[name=item-models]').parent().parent().find('.totalcost').val(data2[0].price * qty);
                              
                          },
                          error: function (xhr, text, error) {              
                              alert(error);
                          }
                        })
                        
                    },
                    error: function (xhr, text, error) {              
                       alert(error)
                    }
                })
            }

            //-STATOR ASSEMBLE
            if(motorobject.stator.length > 0)
            { 
              for(var i=0; i<motorobject.stator.length; i++)
              {
                  if(motorobject.stator.length > 1 && motorobject.stator[i].name == 'stator-inspection'){
                    
                    - $('input[name="stator-unitcost-'+(i+1)+'"]').attr('value', 0);
                    - $('input[name="stator-totalcost-'+(i+1)+'"]').attr('value', 0);
                  }
                  else{
                    
                    - $('input[name="stator-unitcost-'+(i+1)+'"]').attr('value', 650);
                    - $('input[name="stator-totalcost-'+(i+1)+'"]').attr('value', 650);
                  }

                  //-Complete Package Option
                  if(motorobject.stator[i].name == 'stator-complete-recon'){
                      
                    - $('input[name="stator-unitcost-'+(i+1)+'"]').val((hptable[0]['rpm-'+(hzspeed-1)])/2);
                    - $('input[name="stator-totalcost-'+(i+1)+'"]').val((hptable[0]['rpm-'+(hzspeed-1)])/2);
                  } 
                  else if(motorobject.stator[i].name == 'stator-complete-rewinding')
                  {
                    
                    - $('input[name="stator-unitcost-'+(i+1)+'"]').val((hptable[0]['rpm-'+(hzspeed-1)]));
                    - $('input[name="stator-totalcost-'+(i+1)+'"]').val((hptable[0]['rpm-'+(hzspeed-1)]));
                    
                  }
                  else if(motorobject.stator[i].name == 'conversion')
                  {
                    //-Conversion of motor any parameter
                    - $('input[name="stator-unitcost-'+(i+1)+'"]').attr('value', 0.15*(hptable[0]['rpm-'+(hzspeed-1)]));
                    - $('input[name="stator-totalcost-'+(i+1)+'"]').attr('value', 0.15*(hptable[0]['rpm-'+(hzspeed-1)]));
                  } 
              }
            }

            if(draft)
            {
              -$('input[name="genreq-pickup-qty"]').val(draft[0].gen[0].qty)
              -$('input[name="genreq-pickup-unitcost"]').val(draft[0].gen[0].unitcost)
              -$('input[name="genreq-pickup-totalcost"]').val(draft[0].gen[0].totalcost)

              -$('input[name="genreq-dismantling-qty"]').val(draft[0].gen[1].qty)
              -$('input[name="genreq-dismantling-unitcost"]').val(draft[0].gen[1].unitcost)
              -$('input[name="genreq-dismantling-totalcost"]').val(draft[0].gen[1].totalcost)

              //Fillout date
              var now = new Date(draft[0].startdate); 
              var day = ("0" + now.getDate()).slice(-2);
              var month = ("0" + (now.getMonth() + 1)).slice(-2);
              var startdate = now.getFullYear()+"-"+(month)+"-"+(day) ; 

              var now2 = new Date(draft[0].finishdate); 
              var day2 = ("0" + now2.getDate()).slice(-2);
              var month2 = ("0" + (now2.getMonth() + 1)).slice(-2);
              var finishdate = now2.getFullYear()+"-"+(month2)+"-"+(day2) ;

              $('input[name="startdate"]').val(startdate);
              $('input[name="finishdate"]').val(finishdate);


              //MOD: Check if there's discount
              if(draft[0].discount != null) {
                  var discount_fixed = '';
                  var discount_percent = '';
                  var checked = ['', '']
                  var disabled = ['', '']
                  if(draft[0].discount[1] == 'fixed')   {
                    discount_fixed = draft[0].discount[0]
                    checked[0] = 'checked'
                    checked[1] = ''
                    disabled[0] = ''
                    disabled[1] = 'disabled' 
                    discount_percent = ''
                  }
                  else if(draft[0].discount[1] == 'percent')   
                  {
                    discount_fixed = ''
                    checked[0] = ''
                    checked[1] = 'checked'
                    disabled[0] = 'disabled'
                    disabled[1] = ''
                    discount_percent = draft[0].discount[0]
                  }

                  if(role == 'admin')
                  {
                    -$('.discountfield').find('.row').empty().append('<div class="col"><div class="form-check"><input type="radio" name="discount" class="form-check-input" value="discount_fixed" '+checked[0]+'><label class="form-check-label"><input class="form-control discount_item" type="text" name="discount_fixed" placeholder="Fixed Discount" '+disabled[0]+' value="'+discount_fixed+'"><input type="button" class="form-control btn btn-danger" name="discount-cancel" value="Cancel"></label></div></div>');
                    -$('.discountfield').find('.row').append('<div class="col"><div class="form-check"><input type="radio" name="discount" class="form-check-input" value="discount_percent" '+checked[1]+'><label class="form-check-label"><input class="form-control discount_item" type="text" name="discount_percent" placeholder="% Discount" '+disabled[1]+' value="'+discount_percent+'"></label></div></div>');   
                  }
                  else
                  {
                    if(checked[0] == 'checked')
                      -$('.discountfield').find('.row').empty().append('<div class="col"><div class="form-check"><input type="radio" name="discount" class="form-check-input" value="discount_fixed" '+checked[0]+' readonly><label class="form-check-label"><input class="form-control discount_item" type="text" name="discount_fixed" placeholder="Fixed Discount" '+disabled[0]+' value="'+discount_fixed+'" readonly>Fixed</label></div></div>');
                    else 
                      -$('.discountfield').find('.row').append('<div class="col"><div class="form-check"><input type="radio" name="discount" class="form-check-input" value="discount_percent" '+checked[1]+'><label class="form-check-label"><input class="form-control discount_item" type="text" name="discount_percent" placeholder="% Discount" '+disabled[1]+' value="'+discount_percent+'" readonly>Percentage</label></div></div>');   
                    
                  }
                  
              }
              else if(draft[0].discount != null)
              {
                -$('.discountfield').find('.row').remove()
                -$('.discountfield').append('<div class="row"> <div class="col-md-6 mb-3"> <input class="form-control discountpass" type="password" name="discountpass" placeholder="passcode first" autocomplete="off"></div><div class="col-md-6 mb-3"> <label for="voltage"> </label><input class="form-control discountpassenter btn btn-warning" type="button" value="Verify" name="discountverify"></div></div>')
              }
            }
          
          //-GENERAL STUFF
          for(var i=0; i < motorobject.accessories.length; i++)
          {
            -$('input[name="acce-remarks-'+(i+1)+'"]').val(motorobject.accessories[i].model)
          }

          for(var i=0; i < motorobject.mechanical.length; i++)
          {
            -$('input[name="mech-remarks-'+(i+1)+'"]').val(motorobject.mechanical[i].model)
          }
          
          -$('#upload').on('click', function(){
              var formdata = $('form').serialize();
          })


          -$('.filterqform').find('input').on('change', function(){
            if(this.checked)
            {
              $(this).parent().parent().find('.acce').prop('disabled', true);
              $(this).parent().parent().find('.qty').prop('disabled', true);
              $(this).parent().parent().find('.unitcost').prop('disabled', true);
              $(this).parent().parent().find('.totalcost').prop('disabled', true);
            }
            else 
            {
              $(this).parent().parent().find('.acce').prop('disabled', false);
              $(this).parent().parent().find('.qty').prop('disabled', false);
              $(this).parent().parent().find('.unitcost').prop('disabled', false);
              $(this).parent().parent().find('.totalcost').prop('disabled', false);
            }
          })
          
          -$('.qformprompt').hide();
          -$('#qform').hide();
          -$("input[class*='subqform']").parent().hide();

          //-Get the preference
          -$.ajax({   
              async: false, 
              method: 'GET',
              url: baseurl+'motor/prelimdocs/'+tagID+'/qformpref/',                        
              success: function (data) {          
                  if(!data) 
                  {
                    $('.qformprompt').show();
                    $('#qform').hide();
                    $("input[class*='subqform']").parent().hide();
                  } else
                  {
                    if(data[0].qformPref == 'whole')
                    {
                      $('.qformprompt').hide();
                      $('#qform').show();
                      $("input[class*='subqform']").parent().hide();
                    }
                    else {
                      $('.qformprompt').hide();
                      $('#qform').hide();
                      $("input[class*='subqform']").parent().show();
                    }
                  }
              },
              error: function (xhr, text, error) {              
                 alert('Prelimdocs ajx: motor/prelimdocs/'+tagID+'/qformpref/ Error: ' + error);
              }
          })
          //-Qty
          var numberOnly ='';
          $('.qty').on('change', function(){
            
            if($(this).attr('name').includes('stator'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name=stator-unitcost-' + numberOnly + ']').val());
              - $('input[name="stator-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('acce-qty'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name=acce-unitcost-' + numberOnly + ']').val());
              - $('input[name="acce-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('mech-qty'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name=mech-unitcost-' + numberOnly + ']').val());
              - $('input[name="mech-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('dynamic-qty'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name=dynamic-unitcost-' + numberOnly + ']').val());
              - $('input[name="dynamic-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('misc-qty'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name=misc-unitcost-' + numberOnly + ']').val());
              - $('input[name="misc-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('genreq-pickup-qty'))
            {
              
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name="genreq-pickup-unitcost"]').val());
              - $('input[name="genreq-pickup-totalcost"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('genreq-dismantling-qty'))
            {
              
              var qty = parseFloat($(this).val());
              var unit = parseFloat($('input[name="genreq-dismantling-unitcost"]').val());
              - $('input[name="genreq-dismantling-totalcost"]').val(qty*unit)
            } 
          })
          
          - $("select[class*='model']").one("mouseenter mouseleave", function(e) {
              var model = $(this).attr('class').split(' ')[1].split('-')[1];
              var modelname = $(this).attr('name');
              var parent = $(this).parent();
              var itemname = $(this);
              parent.empty();
              parent.append('<div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>');
              
              $.ajax({   
                  async: true, 
                  method: 'GET',
                  url: baseurl+'motor/priceList/model/'+model,                        
                  success: function (data) {  
                      
                      parent.empty();
                      parent.append('<select class="form-control model-' + model + ' acce" name="'+modelname+'"></select>');
                      -$('.model-'+model).append();
                  
                      for(var i=0; i<data.length; i++)
                      {
                        -$('.model-'+model).append('<option>' + data[i].model + '</option>');
                      }            
                      //  alert($('.model-'+model).val());
                      $.ajax({   
                        async: true, 
                        method: 'GET',
                        url: baseurl+'motor/priceList/model/'+model+'/'+$('.model-'+model).val(),                        
                        success: function (data) { 
                            $('.model-'+model).parent().parent().find('.unitcost').val(data[0].price);
                            $('.model-'+model).parent().parent().find('.totalcost').val(data[0].price);
                        },
                        error: function (xhr, text, error) {              
                            alert('Prelimdocs ajx: motor/priceList/model/'+model+'/'+$('.model-'+model).val() +' Error: ' + error);
                        }
                        })
                      
                  },
                  error: function (xhr, text, error) {              
                      alert('Prelimdocs ajx: motor/priceList/model/'+ model +' Error: ' + error);
                  }
              })
          }); 
          
          - $("input[class*='subqform']").on("click", function() {
              $(".submit").prop('disabled', false);
              var scope = $(this).attr('class').split(' ')[2].split('-')[1];
              $('.'+scope+'-generatedlink').remove();
              $.ajax({   
                async: true, 
                method: 'POST',
                url: baseurl+'io/asset/prelimdocs/quotation/notexists/'+tagID+'/'+scope,  
                //- data:  $('form').serialize() + '&' + $.param(motorobject),              
                data: $('form').serialize(), 
                success: function (data) {  
                   $('.subqform-'+scope).parent().parent().append('<div class="col-md-6 mb-3 '+scope+'-generatedlink"><label for="voltage">Generated Content</label><div class="gencard card"><div class="card-body"><a target="_blank" href="' +baseurl+ 'io/asset/prelimdocs/quotation/notexists/' + tagID + '/'+scope+'">Click here</a></div></div></div>');
                },
                error: function (xhr, text, error) {              
                  alert('Prelimdocs ajx: io/asset/quotation/'+tagID+'/'+scope+' Error: ' + error);
                  }
                })
            })
          
          rewinderurl = baseurl+'rewinder/single/all'
          $.ajax({   
              async: false, 
              method: 'GET',
              url: rewinderurl,                        
              success: function (data) {    

                  for(var i=0; i<data.length; i++)
                  {
                    if(draft)
                    {
                      if(data[i].rewindername == draft[0].rewindername)
                        -$('.rewinders').append('<option selected>' + data[i].rewindername + '</option>');
                      else 
                        -$('.rewinders').append('<option>' + data[i].rewindername + '</option>');
                    }
                    else 
                      -$('.rewinders').append('<option>' + data[i].rewindername + '</option>');
                  }                
              },
              error: function (xhr, text, error) {              
                  alert('Prelimdocs ajx: rewinder/single/all Error: ' + error);
              }
          })

          -$('.unitcost').on('change', function(){
            
            if($(this).attr('name').includes('stator'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($('input[name=stator-qty-' + numberOnly + ']').val());
              var unit = parseFloat($('input[name=stator-unitcost-' + numberOnly + ']').val());
              - $('input[name="stator-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('acce'))
            {
              
              numberOnly = $(this).attr('name').replace(/\D/g,'');
             var qty = parseFloat($('input[name=acce-qty-' + numberOnly + ']').val());
              var unit = parseFloat($('input[name=acce-unitcost-' + numberOnly + ']').val());
              - $('input[name="acce-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('mech-unitcost'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($('input[name=mech-qty-' + numberOnly + ']').val());
              var unit = parseFloat($('input[name=mech-unitcost-' + numberOnly + ']').val());
              - $('input[name="mech-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('dynamic-unitcost'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($('input[name=dynamic-qty-' + numberOnly + ']').val());
              var unit = parseFloat($('input[name=dynamic-unitcost-' + numberOnly + ']').val());
              - $('input[name="dynamic-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('misc-unitcost'))
            {
              numberOnly = $(this).attr('name').replace(/\D/g,'');
              var qty = parseFloat($('input[name=misc-qty-' + numberOnly + ']').val());
              var unit = parseFloat($('input[name=misc-unitcost-' + numberOnly + ']').val());
              - $('input[name="misc-totalcost-' + numberOnly+'"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('genreq-pickup-unitcost'))
            {
              var qty = parseFloat($('input[name="genreq-pickup-qty"]').val());
              var unit = parseFloat($('input[name="genreq-pickup-unitcost"]').val());
              - $('input[name="genreq-pickup-totalcost"]').val(qty*unit)
            }
            else if($(this).attr('name').includes('genreq-dismantling-unitcost'))
            {
              var qty = parseFloat($('input[name="genreq-dismantling-qty"]').val());
              var unit = parseFloat($('input[name="genreq-dismantling-unitcost"]').val());
              - $('input[name="genreq-dismantling-totalcost"]').val(qty*unit)
            }
          })

          - $('.acce').on('change', function(){
            
            const selectdd = $(this);
            - $.ajax({   
                method: 'GET',
                url: baseurl + 'motor/priceList/'+$(this).val().replace(' ', '_'),                        
                success: function (data) {    
                  console.log(data)
                  numberOnly = $(selectdd).attr('name').replace(/\D/g,'');   
                  var qty = parseFloat($('input[name=acce-qty-' + numberOnly + ']').val());
                  $('input[name=acce-unitcost-' + numberOnly + ']').val(data[0].price);   
                  var unit = parseFloat($('input[name=acce-unitcost-' + numberOnly + ']').val());         
                  - $('input[name="acce-totalcost-' + numberOnly+'"]').val(qty*unit)
                },
                error: function (xhr, text, error) {              
                    alert('Prelimdocs ajx: motor/priceList/'+$(this).val().replace(' ', '_') + error);
                }
            })          
          })

          - $('.loading').delegate('.acce', 'change', function(){
            const selectdd = $(this);
            var model = $(this).attr('class').split(' ')[1].split('-')[1];
            var scope = $(this).attr('name').split('-')[0];
            - $.ajax({   
                method: 'GET',
                url: baseurl+'motor/priceList/model/'+model+'/'+$('.model-'+model).val(),                        
                success: function (data) {    
                  numberOnly = $(selectdd).attr('name').replace(/\D/g,'');  
                   
                  var qty = parseFloat($('input[name='+scope+'-qty-' + numberOnly + ']').val());
                  $('input[name='+scope+'-unitcost-' + numberOnly + ']').val(data[0].price);   
                  var unit = parseFloat($('input[name='+scope+'-unitcost-' + numberOnly + ']').val());         
                  - $('input[name="'+scope+'-totalcost-' + numberOnly+'"]').val(qty*unit)
                },
                error: function (xhr, text, error) {              
                    alert('Prelimdocs ajx: motor/priceList/model/'+model+'/'+$('.model-'+model).val() + error);
                }
            })          
          })


          - $('.discountfield').delegate('input[name="discount"]', 'change', function() {
            $('.discount_item').prop("disabled", true)
            $('.discount_item').val('')
            var chosen = $(this).val();
            if($(this).prop("checked"))
            {
               $('input[name="'+chosen+'"]').prop("disabled", false)
            }
          })

          
          //MOD: STATOR - Fillout Stator details
          //- if(draft)
          //- {
          //-   -$('input[name*="stator-qty"]').each(function(i) {
          //-     var grandparent = $(this).parent().parent()
          //-     $(this).val(draft[0].stator[i].qty)
          //-     var currqty = parseInt(draft[0].stator[i].qty)
              
          //-     //- grandparent.find('.unitcost').val(draft[0].stator[i].unitcost)
          //-     var currunitcost = parseFloat(grandparent.find('.unitcost').val())
              
          //-     grandparent.find('.totalcost').val(currunitcost*currqty)
          //-   })
          //- }

          //Reboring of Bearing Housing
          tableurl = null;
          
          if(motorpowertype == 'HP') tableurl = baseurl+'motor/hpTable2/'+motorpowerval;
          else if (motorpowertype == 'KW') tableurl = baseurl+'motor/kwTable2/'+motorpowerval;
          
          if(tableurl)
            {
              var hptable2 = function () {
                  var tmp = null;
                  $.ajax({   
                      async: false, 
                      method: 'GET',
                      url: tableurl,                        
                      success: function (data) {   
                          
                          tmp = data;
                      },
                      error: function (xhr, text, error) {              
                          -alert('Prelimdocs ajx: ' + tableurl  + error);
                      }
                  })
                  return tmp;
              }();
            }
          

          if(hptable2)
          {
            -$('.acce-shafting').find('.unitcost').attr('value', (hptable2[0]['shafting']));
            -$('.acce-shafting').find('.totalcost').attr('value', (hptable2[0]['shafting']));
            //- -$('.acce-shafting').find('.unitcost').attr('disabled', 'disabled');
            -$('.acce-reboring-housing').find('.unitcost').attr('value', (hptable2[0]['bearinghousing']));
            -$('.acce-reboring-housing').find('.totalcost').attr('value', (hptable2[0]['bearinghousing']));
            //- -$('.acce-reboring-housing').find('.unitcost').attr('disabled', 'disabled');
            -$('.acce-sleeving').find('.unitcost').attr('value', (hptable2[0]['bearinghousing']));
            -$('.acce-sleeving').find('.totalcost').attr('value', (hptable2[0]['bearinghousing']));
            //- -$('.acce-sleeving').find('.unitcost').attr('disabled', 'disabled');
            -$('.dynamic-options').find('.unitcost').attr('value', (hptable2[0]['dynamicbalancing']));
            -$('.dynamic-options').find('.totalcost').attr('value', (hptable2[0]['dynamicbalancing'])); 
            //- -$('.dynamic-options').find('.unitcost').attr('disabled', 'disabled');
          }


          //-ACCESSORIES
          pricelisturl = baseurl + 'motor/priceList/';
          -$.ajax({   
              async: false,
              method: 'GET',
              url: pricelisturl,                        
              success: function (data) {                        
                  for(var i=0; i<data.length; i++){
                    - $('.acce').append('<option>' + data[i].model + '</option>')
                  }
              },
              error: function (xhr, text, error) {              
                  alert('Prelimdocs ajx: motor/priceList/' + error);
              }
          }).done(function(data)
          {
              var  test = $('.acce option:selected').val();
              
              for(var i=0; i<motorobject.accessories.length; i++)
              {
                if(motorobject.accessories)
                {
                  if(motorobject.accessories[i].name == 'rotor-loadside' || motorobject.accessories[i].name == 'rotor-fanslide' || motorobject.accessories[i].name == 'rotor-gearbox1' || motorobject.accessories[i].name == 'rotor-gearbox2' || motorobject.accessories[i].name == 'rotor-gearbox3' || motorobject.accessories[i].name == 'rotor-gearbox4' || motorobject.accessories[i].name == 'rotor-gearbox5' || motorobject.accessories[i].name == 'rotor-gearbox6')  
                  {

                    $('input[name="acce-unitcost-' + (i+1) + '"]').val(data[0].price);
                    $('input[name="acce-totalcost-' + (i+1) + '"]').val(data[0].price);
                  }
                 
                }  
              }
          })

          if(draft)
          {
              //MOD: List Down All Items - MECH and ACCE
            - $("select[class*='model']").each(function(i) {
                var model = $(this).attr('class').split(' ')[1].split('-')[1];
                var modelname = $(this).attr('name');
                var parent = $(this).parent();
                var itemname = $(this);
                parent.empty();
                parent.append('<div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>');
                
                $.ajax({   
                    async: false, 
                    method: 'GET',
                    url: baseurl+'motor/priceList/model/'+model,                        
                    success: function (data) {  
                        
                        parent.empty();
                        parent.append('<select class="form-control model-' + model + ' acce" name="'+modelname+'"></select>');
                        -$('.model-'+model).append();
                    
                        for(var i=0; i<data.length; i++)
                        {
                          -$('.model-'+model).append('<option>' + data[i].model + '</option>');
                        }            
                        $.ajax({   
                          async: false, 
                          method: 'GET',
                          url: baseurl+'motor/priceList/model/'+model+'/'+$('.model-'+model).val(),                        
                          success: function (data) { 
                              $('.model-'+model).parent().parent().find('.unitcost').val(data[0].price);
                              $('.model-'+model).parent().parent().find('.totalcost').val(data[0].price);
                          },
                          error: function (xhr, text, error) {              
                              alert('Prelimdocs ajx: motor/priceList/model/'+model+'/'+$('.model-'+model).val() + error);
                          }
                        })
                    },
                    error: function (xhr, text, error) {              
                        alert('Prelimdocs ajx: motor/priceList/model/'+model + error);
                    }
                })
            }); 

            //MOD: MECHANICAL Select chosen mechanical item
            -$('select[name*="mech-item"]').each(function(i) {
              var grandparent = $(this).parent().parent()
              grandparent.find('.qty').val(draft[0].mechanical[i].qty)
              grandparent.find('.unitcost').val(draft[0].mechanical[i].unitcost)
              grandparent.find('.totalcost').val(draft[0].mechanical[i].totalcost)
            
              $(this).find('option').each(function(j){
                  if($(this).val() == draft[0].mechanical[i].item){
                      
                      $(this).prop('selected', true)
                  }  
              })
            })  

            //MOD ACCE - Fill out all price details and select the chosen item. Bearing
            var itemctr = 0;
    
            -$('.acce').each(function(i) {
                var obj = null
                if(itemctr < draft[0].accessories.length) {
                  obj = draft[0].accessories
                  
                  var grandparent = $(this).parent().parent()

                  //To fill out those items that do not have item list in db.
                  grandparent.find('input[name="acce-item-'+(i+1)+'"]').val(obj[i].item)
                  grandparent.find('.qty').val(obj[i].qty)
                  grandparent.find('.unitcost').val(obj[i].unitcost)
                  grandparent.find('.totalcost').val(obj[i].totalcost)
                  
                  $(this).find('option').each(function(j){
                      if($(this).val() == obj[i].item){
                        
                          $(this).prop('selected', true)
                    }  
                  })
                  itemctr++
                }
            })         


            //MOD DYNAMIC - Fill out all price details
            -$('input[name*="dynamic-qty"]').each(function(i) {
              var grandparent = $(this).parent().parent()
              grandparent.find('.qty').val(draft[0].dynamic[i].qty)
              grandparent.find('.unitcost').val(draft[0].dynamic[i].unitcost)
              grandparent.find('.totalcost').val(draft[0].dynamic[i].totalcost)
            })

            //MOD MISC - Fill out all price details
            -$('input[name*="misc-qty"]').each(function(i) {
              var grandparent = $(this).parent().parent()
              grandparent.find('.qty').val(draft[0].misc[i].qty)
              grandparent.find('.unitcost').val(draft[0].misc[i].unitcost)
              grandparent.find('.totalcost').val(draft[0].misc[i].totalcost)
            })


            //MOD ACCESSORIES - Fill out the 'OTHER' field 
            for(var i=0; i<draft[0].accessories.length; i++)
            {
              if(draft[0].accessories[i].name == 'acce-other-1')
              {
                
                -$.ajax({   
                    async: false, 
                    method: 'GET',
                    url: baseurl+'motor/models',                      
                    success: function (data) {               
                        for(var j=0; j<data.length; j++)
                        {
                          if((data[j].name).replace('pricelist_', '') == draft[0].accessories[i].model)
                            -$('select[name=item-models]').append('<option selected>'+(data[j].name).replace('pricelist_', '')+'</option>')
                          else 
                            -$('select[name=item-models]').append('<option>'+(data[j].name).replace('pricelist_', '')+'</option>')
                        }
                    },
                    error: function (xhr, text, error) {              
                        alert(error)
                    }
                })

                -$.ajax({   
                    async: true, 
                    method: 'GET',
                    url: baseurl+'motor/priceList/model/'+draft[0].accessories[i].model,                        
                    success: function (data) {  
                      console.log(data)

                      for(var j=0; j<data.length; j++)
                      {
                        if(data[j].model == draft[0].accessories[i].item)
                          $('select[name=item-model-items]').append('<option selected>'+data[j].model+'</option>')
                        else
                          $('select[name=item-model-items]').append('<option>'+data[j].model+'</option>')
                      }
                    },
                    error: function (xhr, text, error) {              
                       alert(error)
                    }
                })

               
                -$('select[name=item-model-items]').val(draft[0].accessories[i].item)

                -$('select[name=item-models]').parent().parent().find('.qty').val(draft[0].accessories[i].qty) 
                -$('select[name=item-models]').parent().parent().find('.unitcost').val(draft[0].accessories[i].unitcost)
                -$('select[name=item-models]').parent().parent().find('.totalcost').val(draft[0].accessories[i].totalcost)



                break;
              }
               
            }
          }

        - $( ".qformprompt" ).click(function() {
          
           $.magnificPopup.open({
            items: {
              src: '<div class="white-popup qconfim"><h3>What quotation form do you want?</h3><button class="btn btn-primary mr-1 whole">Whole</button><button class="btn btn-primary mr-1 scopes">Scope of Works</button><button class="cancel btn btn-danger">Cancel</button></div>', // can be a HTML string, jQuery object, or CSS selector
              type: 'inline'
            }
          });

          $('.whole').on('click', function () {
              $.magnificPopup.open({
                items: {
                  src: '<div class="white-popup qconfim"><h3>Are you sure? You cannot change this once done. </h3><button class="btn btn-primary mr-1 whole-confirm">Yes</button><button class="cancel btn btn-danger">Cancel</button></div>', // can be a HTML string, jQuery object, or CSS selector
                  type: 'inline'
                }
              })

              $('.whole-confirm').on('click', function () {
                $(".submit").prop('disabled', false);
                -$.ajax({   
                    async: true,
                    method: 'POST',
                    url: baseurl+'motor/prelimdocs/'+tagID+'/whole',                        
                    success: function (data) {         
                        $('.qformprompt').attr('disabled', 'disabled');
                        $('.qformprompt').addClass('disabled').removeClass('btn-primary');   
                        $('#qform').toggle();      
                                   
                        $.magnificPopup.close();
                    },
                    error: function (xhr, text, error) {              
                        alert('Prelimdocs ajx: motor/prelimdocs/'+tagID+'/whole' + error);
                    }
                });
              });

              $('.cancel').on('click', function () {
                $.magnificPopup.close();
              });
          })

         $('.scopes').on('click', function () {
              $.magnificPopup.open({
                items: {
                  src: '<div class="white-popup qconfim"><h3>Are you sure? You cannot change this once done. </h3><button class="btn btn-primary mr-1 whole-confirm">Yes</button><button class="cancel btn btn-danger">Cancel</button></div>', // can be a HTML string, jQuery object, or CSS selector
                  type: 'inline'
                }
              })

              $('.whole-confirm').on('click', function () {
                $("#submit").prop('disabled', false);
                -$.ajax({   
                    async: true,
                    method: 'POST',
                    url: baseurl+'motor/prelimdocs/'+tagID+'/scopes',                        
                    success: function (data) {         
                        $('.qformprompt').attr('disabled', 'disabled');
                        $('.qformprompt').addClass('disabled').removeClass('btn-primary');   
                        $("input[class*='subqform']").parent().toggle();
                        $.magnificPopup.close();
                    },
                    error: function (xhr, text, error) {              
                        alert('Prelimdocs ajx: motor/prelimdocs/'+tagID+'/scopes' + error);
                    }
                });
              });

              $('.cancel').on('click', function () {
                $.magnificPopup.close();
              });
          })

          $('.cancel').on('click', function () {
            $.magnificPopup.close();
          });
        });


        -$('.discountfield').delegate('input[name="discountverify"]', 'click', function()
        {
          
          var grandparent = $(this).parent().parent();
          $.ajax({   
                async: true,
                method: 'GET',
                url: baseurl+'motor/passcode/discount',                        
                success: function (data) {                        
                    var passcode = data[0].password;
                    var inputpasscode = $('input[name="discountpass"]').val();
                   
                    if(passcode == inputpasscode)
                    {
                      grandparent.empty().append('<div class="col"><div class="form-check"><input type="radio" name="discount" class="form-check-input" value="discount_fixed" checked><label class="form-check-label"><input class="form-control discount_item" type="text" name="discount_fixed" placeholder="Fixed Discount"><input type="button" class="form-control btn btn-danger" name="discount-cancel" value="Cancel"></label></div></div>');
                      grandparent.append('<div class="col"><div class="form-check"><input type="radio" name="discount" class="form-check-input" value="discount_percent"><label class="form-check-label"><input class="form-control discount_item" type="text" name="discount_percent" placeholder="% Discount" disabled></label></div></div>');
                    }
                    else 
                    {
                      alert('Incorrect credential. Please try again');
                    }
                },
                error: function (xhr, text, error) {              
                    alert('Prelimdocs ajx: motor/passcode/discount' + error);
                }
          })   
          
        })

        -$('.discountfield').delegate('input[name="discount-cancel"]', 'click', function(){
            $('.discountfield').find('.row').remove()
            $('.discountfield').append('<div class="row"> <div class="col-md-6 mb-3"> <input class="form-control discountpass" type="password" name="discountpass" placeholder="passcode first" autocomplete="off"></div><div class="col-md-6 mb-3"> <label for="voltage"> </label><input class="form-control discountpassenter btn btn-warning" type="button" value="Verify" name="discountverify"></div></div>')
        })


        -$('#save').click(function(e) {
          $.magnificPopup.open({
            items: {
              src: '<div class="white-popup">Saving...</div>',
              type: 'inline'
            }
          });
          $.ajax({   
              async: true, 
              method: 'POST',
              data:  $('form').serialize(),   
              url: baseurl+'motor/save/prelimdocs/'+tagID,                          
              success: function (data) {  
                $.magnificPopup.close();
                //Close the popup
                e.preventDefault();
                if (window.parent == window.top) {
                    window.parent.$.magnificPopup.close();
                }
              },
              error: function (xhr, text, error) {              
                alert('Prelimdocs ajx: motor/save/prelimdocs/'+tagID + error);
              }
          })
        })

        - $("form input").prop("disabled", false);
        - $('#qform').on('click', function(){
          
            $(".submit").prop('disabled', false);
            //- var motorobject = !{JSON.stringify(motorObjOncheckup)}
            $('.wholeaformlink').remove();
            var baseurl = window.location.protocol + "//" + window.location.host + "/"
            $.ajax({
                method: 'POST',
                url: baseurl+'io/asset/prelimdocs/quotation/notexists/'+tagID,    
                //data:  $('form').serialize() + '&' + $.param(motorobject),  
                data:  $('form').serialize(),           
                success: function (data) { 
                    $('#qformcont').parent().append('<div class="col-md-6 mb-3 wholeaformlink generatedlink"><label for="voltage">Generated Content</label><div class="gencard card"><div class="card-body"><a target="_blank" href="' +baseurl+ 'io/asset/prelimdocs/quotation/notexists/' + tagID + '">Click here</a></div></div></div>');
                },
                error: function (xhr, text, error) {               
                    alert('Prelimdocs ajx: io/asset/quotation/'+tagID + error);
                }
            })
            
        })

        

        })

        

          
      
        
        
      



      

     



     
