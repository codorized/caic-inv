doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    meta(name='description', content='')
    meta(name='author', content='Mark Otto, Jacob Thornton, and Bootstrap contributors')
    meta(name='generator', content='Jekyll v4.1.1')
    title #{title}
    link(rel='canonical', href='https://getbootstrap.com/docs/4.5/examples/dashboard/')
    // Bootstrap core CSS
    link(href='https://getbootstrap.com/docs/4.5/dist/css/bootstrap.min.css', rel='stylesheet', integrity='sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z', crossorigin='anonymous')
    // Favicons
    link(href='css/dashboard2.css', rel='stylesheet')
  
    link(rel='apple-touch-icon', href='/docs/4.5/assets/img/favicons/apple-touch-icon.png', sizes='180x180')
    link(rel='icon', href='/docs/4.5/assets/img/favicons/favicon-32x32.png', sizes='32x32', type='image/png')
    link(rel='icon', href='/docs/4.5/assets/img/favicons/favicon-16x16.png', sizes='16x16', type='image/png')
    link(rel='manifest', href='/docs/4.5/assets/img/favicons/manifest.json')
    link(rel='mask-icon', href='/docs/4.5/assets/img/favicons/safari-pinned-tab.svg', color='#563d7c')
    link(rel='icon', href='/docs/4.5/assets/img/favicons/favicon.ico')
    meta(name='msapplication-config', content='/docs/4.5/assets/img/favicons/browserconfig.xml')
    meta(name='theme-color', content='#563d7c')
    style.
      .bd-placeholder-img {
      font-size: 1.125rem;
      text-anchor: middle;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      }
      @media (min-width: 768px) {
      .bd-placeholder-img-lg {
      font-size: 3.5rem;
      }
      }
    // Custom styles for this template
    link(href='https://getbootstrap.com/docs/4.5/examples/dashboard/dashboard.css', rel='stylesheet')
  body#bodyStyle
    nav.navbar.navbar-dark.sticky-top.bg-dark.flex-md-nowrap.p-0.shadow
      div 
        a.navbar-brand.col-md-3.col-lg-2.mr-0.px-3(href='#') CAIC Inventory System
        button.navbar-toggler.position-absolute.d-md-none.collapsed(type='button', data-toggle='collapse', data-target='#sidebarMenu', aria-controls='sidebarMenu', aria-expanded='false', aria-label='Toggle navigation')
          span.navbar-toggler-icon
        //input.form-control.form-control-dark.w-100(type='text', placeholder='Search', aria-label='Search')
      
        //- ul.navbar-nav.px-3.header
        //-   li.nav-item.text-nowrap
        //-     a.nav-link(href='#') Sign out
    .container-fluid
      .row
        nav#sidebarMenu.col-md-3.col-lg-2.d-md-block.bg-light.sidebar.collapse
          .sidebar-sticky.pt-3
            ul.nav.flex-column
              li.nav-item
                a.nav-link.active(href='#')
                  span(data-feather='home')
                  |               Dashboard 
                  span.sr-only (current)
              li.nav-item
                a.nav-link(href='motorForm')
                  span(data-feather='file')
                  |               Motor Pickup Form
              li.nav-item
                a.nav-link(href='viewAllMotors')
                  span(data-feather='file')
                  |               View all motors
              li.nav-item
                a.nav-link(href='insertRandomData')
                  span(data-feather='shopping-cart')
                  |               Insert Random Data (DO NOT CLICK)
        main.col-md-9.ml-sm-auto.col-lg-10.px-md-4(role='main')
        
          .d-flex.justify-content-between.flex-wrap.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom
            h1.h2 Dashboard
            .btn-toolbar.mb-2.mb-md-0
              //- .btn-group.mr-2
              //-   button.btn.btn-sm.btn-outline-secondary(type='button') Share
              //-   button.btn.btn-sm.btn-outline-secondary(type='button') Export
              //- button.btn.btn-sm.btn-outline-secondary.dropdown-toggle(type='button')
              //-   span(data-feather='calendar')
              //-   |             This week
              //- form(method='POST')
              //-   button.btn.btn-outline-secondary(type='submit', onclick='submitForm()') Insert/Delete Randomly
          div.numberStats
            div
              div.numberStat 
                h1.h3#notStarted 1
                p Not Started
              div.numberStat 
                h1.h3#onCheckup 0
                p On Check-up
              div.numberStat 
                h1.h3#forQuotation 0
                p For Quotation
              div.numberStat 
                h1.h3#awaitingPo 0
                p Awaiting PO
              div.numberStat 
                h1.h3#onRewind 0
                p On Rewind
              div.numberStat 
                h1.h3#onFabrication 0
                p On Fabrication
              div.numberStat 
                h1.h3#inBaking 0
                p In Baking
              div.numberStat 
                h1.h3#waitingMaterials 0
                p Waiting for Materials
              div.numberStat 
                h1.h3#assAndTest 0
                p Assembly and Testing
              div.numberStat 
                h1.h3#painting 0
                p Painting
              div.numberStat 
                h1.h3#forDelivery 0
                p For Delivery
              div.numberStat 
                h1.h3#forBilling 0
                p For Billing Statement
              div.numberStat 
                h1.h3#forOr 0
                p For OR
              div.numberStat 
                h1.h3#completed 0
                p Completed
          div.pieCharts.row
            div.col-6
              canvas#myPieChart1.my-4.w-100
            div.col-6
              canvas#myPieChart2.my-4.w-100
          div
            canvas#myChart.my-4.w-100(width='900', height='350')
          
          h2 Recent Items
          .table-responsive
            table.table.table-striped.table-sm
              thead
                tr
                  th Tag ID
                  th Urgent? 
                  th Sales Representative
                  th Date Pulled Out
                  th Company
                  th Motor Type
                  th HP
                  th KW
                  th RPM
                  //- th Others
                  //- th Parts
                  th Remarks
              tbody#newItem
                each item in items
                  tr
                    td #{item.tagID}
                    if item.urgent === 'on'
                        td yes
                    else 
                        td no 

                    td #{item.salesRep}
                    td #{item.datePulledOut}
                    td #{item.company}
                    td #{item.motorType}
                    td #{item.hp}
                    td #{item.kw}
                    td #{item.rpm}
                    td #{item.remarks}
                    //- - var otherList = [];
                    //- each other in item.others
                    //-   if other.isChecked == "on"
                    //-     - otherList.push(other.name)
                        
                    //- td #{otherList}

                
    script(src='https://code.jquery.com/jquery-3.5.1.slim.min.js', integrity='sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj', crossorigin='anonymous')
    script.
      window.jQuery || document.write('<script src="/docs/4.5/assets/js/vendor/jquery.slim.min.js"><\\/script>')
    script(src='https://getbootstrap.com/docs/4.5/dist/js/bootstrap.bundle.min.js', integrity='sha384-LtrjvnR4Twt/qOuYxE721u19sVFLVSA4hf/rRt6PrZTmiPltdZcI7q7PXQBYTKyf', crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.9.0/feather.min.js')
    script(src='https://cdn.jsdelivr.net/npm/chart.js@2.7.3/dist/Chart.min.js')
    script(src='https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0')
    script(src='/js/dashboard.js')
    script(src='/socket.io/socket.io.js')
    script.
      var socket = io();
      var ctx = document.getElementById('myChart').getContext('2d');
      var salesRepObject = loadSalesRep(ctx, !{JSON.stringify(stats)});

      var ctx2 = document.getElementById('myPieChart1').getContext('2d');
      var urgentCountObject = getUrgentCount(ctx2, !{JSON.stringify(urgenCount)});

      
      var ctx3 = document.getElementById('myPieChart2').getContext('2d');
      var clientCountObject = getClients(ctx3, !{JSON.stringify(clientCount)});
    

      socket.on('db', (msg) => {
        //Load the initital data
        var curr = JSON.parse(msg);
        if(curr.operationType == 'insert'){
          var myTable = document.getElementById('newItem');
          var row = myTable.insertRow(0);

          var c0 = row.insertCell(0);
          var c1 = row.insertCell(1);
          var c2 = row.insertCell(2);
          var c3 = row.insertCell(3);
          var c4 = row.insertCell(4);
          var c5 = row.insertCell(5);
          var c6 = row.insertCell(6);
          var c7 = row.insertCell(7);
          var c8 = row.insertCell(8);
          var c9 = row.insertCell(9);

          c0.innerHTML = curr.fullDocument.tagID;
          curr.fullDocument.urgent === 'on'? c1.innerHTML = 'yes':
                                          c1.innerHTML = 'no';
          
          c2.innerHTML = curr.fullDocument.salesRep;
          c3.innerHTML = curr.fullDocument.datePulledOut;
          c4.innerHTML = curr.fullDocument.company;
          c5.innerHTML = curr.fullDocument.motorType;
          c6.innerHTML = curr.fullDocument.hp;
          c7.innerHTML = curr.fullDocument.kw;
          c8.innerHTML = curr.fullDocument.rpm;
          c9.innerHTML = curr.fullDocument.remarks;


          myTable.deleteRow(10);
        }

        //Make changes to SalesRep Chart
        var salesRepIndx = salesRepObject.data.labels.indexOf(curr.fullDocument.salesRep);
        if(salesRepIndx >= 0)
        {
          salesRepObject.chart.data.datasets[0].data[salesRepIndx]++;
          salesRepObject.update();
        }
        else{
           salesRepObject.data.labels.push(curr.fullDocument.salesRep);
           salesRepObject.data.datasets.forEach((dataset) => {
              dataset.data.push(1);
           });
           salesRepObject.update();
        }

        //Make changes to Urgent Chart
        var urgentIndx = '';
        curr.fullDocument.urgent === 'on'? 
          urgentIndx = urgentCountObject.data.labels.indexOf('urgent'):
          urgentIndx = urgentCountObject.data.labels.indexOf('not');
        urgentCountObject.chart.data.datasets[0].data[urgentIndx]++;
        urgentCountObject.update();

        //Make changes to Client Chart
        var clientIndx = clientCountObject.data.labels.indexOf(curr.fullDocument.company);
        if(clientIndx >= 0)
        {
          clientCountObject.chart.data.datasets[0].data[clientIndx]++;
          clientCountObject.update();
        }
        else{
           clientCountObject.data.labels.push(curr.fullDocument.company);
           clientCountObject.data.datasets.forEach((dataset) => {
              dataset.data.push(1);
           });
           clientCountObject.update();
        }
        console.log(curr.fullDocument.status);
        switch(curr.fullDocument.status)  
        {
          case 'Not Started': 
            document.getElementById('notStarted').innerHTML = parseInt(document.getElementById('notStarted').innerHTML) + 1;
            break;
          case 'On Check-up': 
            document.getElementById('onCheckup').innerHTML = parseInt(document.getElementById('onCheckup').innerHTML) + 1;
            break;
          case 'For Quotation': 
            document.getElementById('forQuotation').innerHTML = parseInt(document.getElementById('forQuotation').innerHTML) + 1;
            break;
          case 'Awaiting Purchase Order': 
            document.getElementById('awaitingPo').innerHTML = parseInt(document.getElementById('awaitingPo').innerHTML) + 1;
            break;
          case 'On Rewind': 
            document.getElementById('onRewind').innerHTML = parseInt(document.getElementById('onRewind').innerHTML) + 1;
            break;
          case 'On Fabrication': 
            document.getElementById('onFabrication').innerHTML = parseInt(document.getElementById('onFabrication').innerHTML) + 1;
            break;
          case 'In Baking': 
            document.getElementById('inBaking').innerHTML = parseInt(document.getElementById('inBaking').innerHTML) + 1;
            break;
          case 'Waiting for Materials': 
            document.getElementById('waitingMaterials').innerHTML = parseInt(document.getElementById('waitingMaterials').innerHTML) + 1;
            break;
          case 'Assembly and Testing': 
            document.getElementById('assAndTest').innerHTML = parseInt(document.getElementById('assAndTest').innerHTML) + 1;
            break;
          case 'Painting': 
            document.getElementById('painting').innerHTML = parseInt(document.getElementById('painting').innerHTML) + 1;
            break;
          case 'For Delivery': 
            document.getElementById('forDelivery').innerHTML = parseInt(document.getElementById('forDelivery').innerHTML) + 1;
            break;
          case 'For Billing Statement': 
            document.getElementById('forBilling').innerHTML = parseInt(document.getElementById('forBilling').innerHTML) + 1;
            break;
          case 'For OR': 
            document.getElementById('forOr').innerHTML = parseInt(document.getElementById('forOr').innerHTML) + 1;
            break;
          case 'Completed': 
            document.getElementById('completed').innerHTML = parseInt(document.getElementById('completed').innerHTML) + 1;
            break;
        }

      });

    script.
      $(window).resize(function() {
        
        var totalWidth=document.body.clientWidth;

        if(totalWidth <= 600)
        {
            clientCountObject.options.legend.display = false;
            clientCountObject.update();
        }
        else{
          clientCountObject.options.legend.display = true;
          clientCountObject.update();
        }
      });

      function submitForm(e)
      {
          e.preventDefault();
          alert('Success!');
      }

      function addContent(status, index){
        switch(status._id)  
        {
          case 'Not Started': 
            document.getElementById('notStarted').innerHTML = status.count;
            break;
          case 'On Check-up': 
            document.getElementById('onCheckup').innerHTML = status.count;
            break;
          case 'For Quotation': 
            document.getElementById('forQuotation').innerHTML = status.count;
            break;
          case 'Awaiting Purchase Order': 
            document.getElementById('awaitingPo').innerHTML = status.count;
            break;
          case 'On Rewind': 
            document.getElementById('onRewind').innerHTML = status.count;
            break;
          case 'On Fabrication': 
            document.getElementById('onFabrication').innerHTML = status.count;
            break;
          case 'In Baking': 
            document.getElementById('inBaking').innerHTML = status.count;
            break;
          case 'Waiting for Materials': 
            document.getElementById('waitingMaterials').innerHTML = status.count;
            break;
          case 'Assembly and Testing': 
            document.getElementById('assAndTest').innerHTML = status.count;
            break;
          case 'Painting': 
            document.getElementById('painting').innerHTML = status.count;
            break;
          case 'For Delivery': 
            document.getElementById('forDelivery').innerHTML = status.count;
            break;
          case 'For Billing Statement': 
            document.getElementById('forBilling').innerHTML = status.count;
            break;
          case 'For OR': 
            document.getElementById('forOr').innerHTML = status.count;
            break;
          case 'Completed': 
            document.getElementById('completed').innerHTML = status.count;
            break;
        }
      }
      
      !{JSON.stringify(statusStats)}.forEach(addContent);
     
      
     
